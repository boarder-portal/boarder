include ../mixins/dropdown

mixin langLink(params)
  -
    const { lang, flag, caption } = params;
    const attrs = lang === i18n.locale ? { class: 'disabled' } : { href: '' };

  div.dropdown-item.link.language(data-lang=lang)&attributes(attrs)
    i.flag-icon(class=`flag-icon-${ flag }`)
    span= caption

mixin alertsBlock()
  div.success
  div.info
  div.warning
  div.error

header.main-header(class=user ? ['authorized'] : [])
  h1.header-caption
    a(href=headerParams.homeLink)= i18n.t('header.home_link')
  div.profile
    - const avatarAttrs = user ? { src: user.avatar } : {};

    img.avatar&attributes(avatarAttrs)
    span.login= user ? user.login : ''
    +dropdown(true, 'left', 'profile-dropdown')
      a.dropdown-item.settings-link.link.no-link(href=headerParams.settingsLink)
        i.menu-icon.fa.fa-cog
        span= i18n.t('header.profile.dropdown.settings')
      div.dropdown-divider
      div.dropdown-item.logout.link
        i.menu-icon.fa.fa-sign-out
        span.logout-caption= i18n.t('header.profile.dropdown.logout')
  span.register-link
    a(href=headerParams.registerLink)= i18n.t('header.register_link')
  span.login-link
    a(href=headerParams.loginLink)= i18n.t('header.login_link')

div.main-content
  div.alerts
    div.very-low
      +alertsBlock()
    div.low
      +alertsBlock()
    div.medium
      +alertsBlock()
    div.high
      +alertsBlock()
    div.very-high
      +alertsBlock()
  div(dwayne-router-state="404").not-found-state
  div(dwayne-router-state="home")
  div(dwayne-router-state="settings").settings-state
  div(dwayne-router-state="auth").auth-state
  div(dwayne-router-state="games")

footer.main-footer
  div.languages
    span.current-lang= currentLang
    +dropdown(false, 'center')
      each params in languages
        +langLink(params)
