import {
  BaseGameOptions,
  BasePlayerSettings,
  CommonClientEventMap,
  CommonServerEventMap,
  GamePlayer,
} from 'common/types';
import { GameType } from 'common/types/game';

export enum GameClientEventType {}

export enum GameServerEventType {}

export interface GameOptions extends BaseGameOptions {}

export interface PlayerData {}

export interface Player extends GamePlayer<GameType.{{constCased}}> {
  data: PlayerData;
}

export interface Game {
  players: Player[];
}

export interface ClientEventMap extends CommonClientEventMap<GameType.{{constCased}}> {}

export interface ServerEventMap extends CommonServerEventMap<GameType.{{constCased}}> {}

type {{pascalCased}}GameOptions = GameOptions;

declare module 'common/types/game' {
  interface GamesParams {
    [GameType.{{constCased}}]: {
      clientEventMap: ClientEventMap;
      serverEventMap: ServerEventMap;
      options: {{pascalCased}}GameOptions;
      info: Game;
      result: void;
      playerSettings: BasePlayerSettings;
    };
  }
}
